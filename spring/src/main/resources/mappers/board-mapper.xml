<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kh.spring.board.model.dao.BoardDAO"> <!-- 인터페이스와 연결! -->

	<insert id="insertBoard">
		INSERT INTO BOARD (BOARD_NO, BOARD_TITLE, BOARD_WRITER, BOARD_CONTENT, ORIGIN_NAME, CHANGE_NAME)
		VALUES (SEQ_BNO.NEXTVAL, #{boardTitle}, #{boardWriter}, #{boardContent}, #{originName}, #{changeName})
	</insert>
	
	<insert id="insertReply" parameterType="Reply">
		INSERT INTO REPLY VALUES (SEQ_RNO.NEXTVAL, #{replyContent}, #{refBno}, #{replyWriter}, DEFAULT, DEFAULT)
	</insert>
	
	<update id="increaseCount">
		UPDATE BOARD SET
			COUNT = COUNT + 1
		WHERE BOARD_NO = #{boardNo}
	</update>
	
	<update id="updateBoard">
		UPDATE BOARD SET
			BOARD_TITLE = #{boardTitle},
			BOARD_CONTENT = #{boardContent},
			ORIGIN_NAME = #{originName},
			CHANGE_NAME = #{changeName},
			CREATE_DATE = SYSDATE
		WHERE BOARD_NO = #{boardNo} AND STATUS = 'Y'
	</update>
	<!-- 
		#{} -> '내용'으로 바꿈
		${내용}으로 사용하면 값 자체만 변경함 그래서 문자타입일 경우 ''로 감싸줘야함
	 -->
	
	<update id="deleteBoard">
		UPDATE BOARD SET
			STATUS = 'N'
		WHERE BOARD_NO = #{boardNo}
	</update>
	
	<select id="selectReplyList" resultType="Reply">
		SELECT REPLY_NO, REPLY_CONTENT, REPLY_WRITER, TO_CHAR(CREATE_DATE, 'RRRR-MM-DD') AS CREATE_DATE
		FROM REPLY
		WHERE REF_BNO = #{boardNo} AND STATUS = 'Y'
	</select>
	
	<!-- resultSet이므로 조회했을 때 결과의 컬럼명으로 resultMap에 매핑해야한다 -->
	<select id="selectBoardDetail" resultType="Board">
		SELECT 
			BOARD_NO, 
			BOARD_TITLE, 
			BOARD_WRITER,
			BOARD_CONTENT,
			COUNT, 
			TO_CHAR(CREATE_DATE, 'RRRR-MM-DD') AS CREATE_DATE,
			ORIGIN_NAME,
			CHANGE_NAME
		FROM BOARD
		WHERE BOARD_NO = #{boardNo}
	</select>
	
	<select id="selectBoardList" resultType="Board">
		SELECT 
			BOARD_NO, 
			BOARD_TITLE, 
			BOARD_WRITER,
			COUNT, 
			TO_CHAR(CREATE_DATE, 'RRRR-MM-DD') AS CREATE_DATE,
			ORIGIN_NAME
		FROM BOARD
		WHERE STATUS = 'Y'
		ORDER BY BOARD_NO DESC
	</select>
	
	<select id="selectBoardCount" resultType="_int">
		SELECT COUNT(*)
		FROM BOARD
		WHERE STATUS = 'Y'
			<if test='condition == "writer"'>
				AND BOARD_WRITER LIKE '%' || #{keyword} || '%'
			</if>
			<if test='condition == "title"'>
				AND BOARD_TITLE LIKE '%${keyword}%'
			</if>
			<if test='condition == "content"'>
				AND BOARD_CONTENT LIKE '%${keyword}%'
			</if>
	</select>
	
	<select id="findBoardListLike" resultType="Board">
		SELECT 
			BOARD_NO, 
			BOARD_TITLE, 
			BOARD_WRITER,
			BOARD_CONTENT,
			COUNT, 
			TO_CHAR(CREATE_DATE, 'RRRR-MM-DD') AS CREATE_DATE,
			ORIGIN_NAME
		FROM BOARD
		WHERE STATUS = 'Y'
			<if test='condition == "writer"'>
				AND BOARD_WRITER LIKE '%' || #{keyword} || '%'
			</if>
			<if test='condition == "title"'>
				AND BOARD_TITLE LIKE '%${keyword}%'
			</if>
			<if test='condition == "content"'>
				AND BOARD_CONTENT LIKE '%${keyword}%'
			</if>
			
			<choose>
				<when test='orderby == "count"'>
					ORDER BY COUNT DESC
				</when>
				<otherwise>
					ORDER BY BOARD_NO DESC
				</otherwise>
			</choose>
	</select>
	
	<!-- ROWNUM을 활용하여 순위 출력 -->
	<select id="selectBoardRankList" resultType="Board">
		SELECT *
		FROM (SELECT 
				BOARD_NO, 
				BOARD_TITLE, 
				BOARD_WRITER,
				COUNT, 
				TO_CHAR(CREATE_DATE, 'RRRR-MM-DD') AS CREATE_DATE,
				ORIGIN_NAME
			FROM BOARD
			WHERE STATUS = 'Y'
			ORDER BY COUNT DESC, BOARD_NO)
		WHERE ROWNUM &lt;= 5
	</select>
</mapper>